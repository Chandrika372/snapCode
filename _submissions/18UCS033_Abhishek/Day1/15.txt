bool isvalid(int x,int y,vector<int> &E,vector<int> &F,int R,int a,int b)
{
    if(x<0||y<0||x>a||y>b)
    return 0;
    // cout<<"hey";
    for(int i=0;i<E.size();i++)
    {
        if(((x-E[i])*(x-E[i]))+((y-F[i])*(y-F[i]))<=(R*R))
        return 0;
    }
    return 1;
}
int l[4]={-1,0,1,0},r[4]={0,-1,0,1};
string Solution::solve(int A, int B, int C, int D, vector<int> &E, vector<int> &F) {
    queue<pair<int,int>> q;
    int lookup[A+1][B+1];
    memset(lookup,0,sizeof(lookup));
    if(!isvalid(0,0,E,F,D,A,B))
    return "NO";
    q.push({0,0});
    lookup[0][0]=1;
    int c=0;
    while(q.size())
    {
        // cout<<c;c++;
        pair<int,int> p=q.front();
        q.pop();
        if(p.first==A&&p.second==B)
        return "YES";
        for(int i=0;i<4;i++)
        {
            int currx=p.first+l[i];
            int curry=p.second+r[i];
            if(isvalid(currx,curry,E,F,D,A,B)&&lookup[currx][curry]==0)
            {
                q.push({currx,curry});
                lookup[currx][curry]=1;
            }
        }
    }
    return "NO";
}
