/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution 
{
    public void inorder(TreeNode root, ArrayList<Integer> list)
    {
        if(root == null)
            return;
        inorder(root.left,list);
        list.add(root.val);
        inorder(root.right,list);
        
    }
    public int t2Sum(TreeNode A, int B)
    {
        if(A == null)
        {
            return 0;
        }
        ArrayList<Integer> list = new ArrayList<>();
        inorder(A,list);
        int i = 0 , j = list.size() - 1;
        while(i < j)
        {
            int sum = list.get(i) + list.get(j);
            if(sum == B)
            {
                return 1;
            }
            else if ( sum > B)
            {
                j--;
            }
            else {
                i++;
            }
        }
    return 0;
    }
}
