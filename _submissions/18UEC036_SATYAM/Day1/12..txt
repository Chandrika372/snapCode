// Recursive 
bool check(vector<int> &a,int l,int r){
    if(l>=r) return true;
    int i=l+1;
    for(;i<r&&a[i]<=a[l];i++);
    for(int j=i;j<r;j++){
        if(a[l]>a[j]) return false;
    }
    
    bool left=check(a,l+1,i-1);
    bool right=check(a,i,r);
    
    return left&&right;
}
int Solution::solve(vector<int> &a) {
    // Iterative 
    int n=a.size();
    // for(int i=0;i<n;i++){
    //     int j=i+1;
    //     for(;j<n&&a[j]<=a[i];j++);
    //     for(int k=j;k<n;k++){
    //         if(a[i]>a[k]) return 0;
    //     }
    // }
    // return 1;
    // return check(a,0,a.size()-1);
    
    stack<int> s;
    int root=INT_MIN;
    for(int i=0;i<n;i++){
        
        while(!s.empty()&&a[i]>s.top()){
            root=s.top();
            s.pop();
        }
        
        if(root>a[i]) return 0;
        s.push(a[i]);
    }
    return 1;
}