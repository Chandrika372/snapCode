/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 int a,b,c;
 void inorder(TreeNode* root,int &x,int &y)
 {
     if(root)
     {
         inorder(root->left,x,y);
         a=b;
         b=c;
         c=root->val;
         if(b>a && b>c && x==-1)
         {
             x=b;
         }
         else if(b<a && b<c)
         {
             y=b;
         }
         inorder(root->right,x,y);
     }
 }
vector<int> Solution::recoverTree(TreeNode* root) {
    a=b=c=INT_MIN;
    int x=-1,y=-1;
    inorder(root,x,y);
    return {y,x};
   // for(int i=0;i<v.size();i++)
   // cout<<v[i]<<" ";
    
}
