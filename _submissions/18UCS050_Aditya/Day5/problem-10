int Solution::diffPossible(const vector<int> &a, int k) {
    unordered_map<int,int>m;
    if(a.size()<2)
    return 0;
    for(int i=0;i<a.size();i++)
     {
         m[a[i]]++;
     }
     for(int i=0;i<a.size();i++)
     {
         //cout<<a[i]<<" ";
         if(k!=0 && (m[k+a[i]] || m[a[i]-k]))
            return 1;
         if(k==0 && m[a[i]]>1)
            return 1;
     }
     return 0;
}
